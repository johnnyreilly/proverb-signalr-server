<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" />
    @* This helps the ng-show/ng-hide animations start at the right place. Since Angular has this but needs to load, this gives us the class early. *@
    <style>
        .ng-hide {
            display: none !important;
        }
    </style>
    <title ng-bind="title">@(string.IsNullOrEmpty(ViewBag.Title) ? "Proverb" : ViewBag.Title)</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />

    @* Must be first. IE10 mobile viewport fix *@
    <script>
        if ("-ms-user-select" in document.documentElement.style && navigator.userAgent.match(/IEMobile\/10\.0/)) {
            var msViewportStyle = document.createElement("style");
            var mq = "@@-ms-viewport{width:auto!important}";
            msViewportStyle.appendChild(document.createTextNode(mq));
            document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
        }
    </script>
    <link rel="icon" type="image/png" href="~/content/images/icon.png">
</head>
<body>
    <div>
        <div ng-include="'app/layout/shell.html'"></div>
        <div id="splash-page" ng-show="false" class="dissolve-animation">
            <div class="page-splash">
                <div class="page-splash-message">
                    Proverb
                </div>

                <div class="progress">
                    <div class="progress-bar progress-bar-striped active" role="progressbar" style="width: 20%;">
                        <span class="sr-only">loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/Scripts/jquery-2.1.1.min.js"></script>
    <script>
        (function () {

            var appRoot = '@Url.Content("~/")';
            var remoteServiceRoot = '@Url.Content("~/api/")';
            var appConfig = {};
            var scriptsToLoad;

            /**
             * Handler which fires as each script loads
             */
            function onScriptLoad(event) {

                scriptsToLoad -= 1;

                //console.log("Loaded " + this.src + ", scriptsToLoad: " + scriptsToLoad);

                // Now all the scripts are present run
                if (scriptsToLoad === 0) {
                    startApp();
                }
            }

            /**
             * Start the app
             */
            function startApp() {
                angularApp.start({
                    thirdPartyLibs: {
                        moment: window.moment,
                        toastr: window.toastr,
                        underscore: window._
                    },
                    appConfig: appConfig
                });
            }

            // Load startup data from the server
            $.getJSON(appRoot + "Home/StartApp")
                .done(function (startUpData) {

                    // Enrich appConfig with properties returned on startUpData plus some others
                    $.extend(appConfig, startUpData, {
                        appRoot: appRoot,
                        remoteServiceRoot: remoteServiceRoot
                    });

                    // Determine the assets folder depending upon whether in debug mode or not
                    var buildFolder = appRoot + "build/";
                    var debugOrRelease = (appConfig.inDebug ? "debug" : "release");
                    var manifestFile = buildFolder + "manifest-" + debugOrRelease + ".json";
                    var outputFolder = buildFolder + debugOrRelease + "/";

                    // Load JavaScript and CSS listed in manifest file
                    $.getJSON(manifestFile)
                        .done(function (manifest){

                            manifest.styles.forEach(function (href) {
                                var link = document.createElement("link");

                                link.rel = "stylesheet";
                                link.media = "all";
                                link.href = outputFolder + href.replace(/\\\\/g, "/"); // Convert "\\" to "/"

                                document.head.appendChild(link);
                            });

                            scriptsToLoad = manifest.scripts.length;
                            manifest.scripts.forEach(function (src) {
                                var script = document.createElement("script");

                                script.onload = onScriptLoad;
                                script.src = outputFolder + src.replace(/\\\\/g, "/"); // Convert "\\" to "/"
                                script.async = false;

                                document.head.appendChild(script);
                            });
                        })
                });
        })();
    </script>
</body>
</html>