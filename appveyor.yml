version: 1.0.{build}
os: Visual Studio 2015 Preview
before_build:
- ps: >-
    # Pick up nuget packages

    nuget restore Proverb.sln

    npm install -g bower

    #install npm -g gulp

    write-host "Present working directory: $($pwd.Path)"

    Push-Location  "$($env:APPVEYOR_BUILD_FOLDER)\Proverb.Web" 

    write-host "Present working directory: $($pwd.Path)"

    bower install

    write-host "Show me the Angular..."

    ls .\bower_components

    ls .\bower_components\angular

    #npm install

    Pop-Location

build:
  project: Proverb.sln
  verbosity: minimal

before_test:
- ps: >-
    # Locate Chutzpah

    $ChutzpahDir = get-childitem chutzpah.console.exe -recurse | select-object -first 1 | select -expand Directory
    
    # Run tests using Chutzpah and export results as JUnit format to chutzpah-results.xml

    $ChutzpahCmd = "$($ChutzpahDir)\chutzpah.console.exe $($env:APPVEYOR_BUILD_FOLDER)\Proverb.Web.Tests.JavaScript /junit .\chutzpah-results.xml"

    Write-Host $ChutzpahCmd

    Invoke-Expression $ChutzpahCmd

    # Upload results to AppVeyor one by one

    $testsuites = [xml](get-content .\chutzpah-results.xml)
    
    $anyFailures = $FALSE

    foreach ($testsuite in $testsuites.testsuites.testsuite) {

        write-host " $($testsuite.name)"

        foreach ($testcase in $testsuite.testcase){

            $failed = $testcase.failure

            $time = $testsuite.time

            if ($testcase.time) { $time = $testcase.time }

            if ($failed) {

                write-host "Failed   $($testcase.name) $($testcase.failure.message)"

                Add-AppveyorTest $testcase.name -Outcome Failed -FileName $testsuite.name -ErrorMessage $testcase.failure.message -Duration $time

            }

            else {

                write-host "Passed   $($testcase.name)"

                Add-AppveyorTest $testcase.name -Outcome Passed -FileName $testsuite.name -Duration $time

            }

        }

    }
    
    if ($anyFailures -eq $TRUE){

        write-host "Failing build as there are broken tests"

        $host.SetShouldExit(1)

    }